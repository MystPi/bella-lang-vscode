{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Bella",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#imports"
    },
    {
      "include": "#expression"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line",
          "match": ";.*"
        }
      ]
    },
    "imports": {
      "patterns": [
        {
          "match": "(import)\\s*\\b[a-zA-Z_]\\w*\\b(?:\\s*\\/\\s*\\b[a-zA-Z_]\\w*\\b)*\\s*(?:(as)\\b\\s*[a-zA-Z_]\\w*\\b)?",
          "captures": {
            "1": {
              "name": "keyword.control"
            },
            "2": {
              "name": "keyword.control"
            }
          }
        }
      ]
    },
    "expression": {
      "patterns": [
        {
          "name": "keyword.control",
          "match": "\\b(match|is|if|then|else|let|in|try|throw|import|as)\\b"
        },
        {
          "name": "keyword.operator",
          "match": "\\b(and|or)\\b"
        },
        {
          "name": "keyword.operator",
          "match": "\\|>|->|>=|<=|==|!=|<|>|!|\\.|:|,|=|\\^|\\||\\+|-|\\*|\\/|\\?"
        },
        {
          "name": "constant.language",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "variable.parameter",
          "match": "\\b[a-zA-Z_]\\w*\\b(?=\\s*->)"
        },
        {
          "name": "entity.name.type",
          "match": "\\b[A-Z]\\w*\\b"
        },
        {
          "name": "entity.name.function",
          "match": "\\b[a-zA-Z_]\\w*\\b(?=\\s*\\()|(?<=(?:\\|>|\\?)\\s*(?:(?:[a-zA-Z_]\\w*\\s*\\.\\s*)*)?)\\b[a-zA-Z_]\\w*\\b(?!\\s*\\.)"
        },
        {
          "name": "variable.other",
          "match": "\\b[a-zA-Z_]\\w*\\b"
        },
        {
          "name": "constant.numeric",
          "match": "-?\\d+(\\.\\d+)?"
        },
        {
          "name": "string.quoted.double",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape",
              "match": "\\\\."
            }
          ]
        }
      ]
    }
  },
  "scopeName": "source.bella"
}
